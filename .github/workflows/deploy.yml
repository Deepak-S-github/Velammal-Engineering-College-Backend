name: 🚀 Auto Deploy to EC2 on Main Push

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Setup SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" > private_key.pem
          chmod 600 private_key.pem

            - name: 🔐 Generate .env File from GitHub Secrets
        run: |
          cat <<EOF > .env
MONGO_URI=${{ secrets.MONGO_URI }}
DB_NAME=${{ secrets.DB_NAME }}
CHAT_DB_NAME=${{ secrets.CHAT_DB_NAME }}
PORT=${{ secrets.PORT }}
BASE_EMAIL=${{ secrets.BASE_EMAIL }}
PASSWORD=${{ secrets.PASSWORD }}
TARGET_EMAIL=${{ secrets.TARGET_EMAIL }}
ICELL_TARGET_EMAIL=${{ secrets.ICELL_TARGET_EMAIL }}
GROQ_API_KEY_1=${{ secrets.GROQ_API_KEY_1 }}
GROQ_API_KEY_2=${{ secrets.GROQ_API_KEY_2 }}
GROQ_API_KEY_3=${{ secrets.GROQ_API_KEY_3 }}
GROQ_API_KEY_4=${{ secrets.GROQ_API_KEY_4 }}
GROQ_API_KEY_5=${{ secrets.GROQ_API_KEY_5 }}
AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
AWS_S3_NAME=${{ secrets.AWS_S3_NAME }}
AWS_REGION=${{ secrets.AWS_REGION }}
REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}
EOF

      - name: 📤 Upload .env and setup.sh to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i private_key.pem .env setup.sh ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/

      - name: 🚀 SSH into EC2 and Run Deployment Script as root
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@${{ secrets.EC2_HOST }} '
            sudo mv /home/ec2-user/.env /root/.env
            sudo mv /home/ec2-user/setup.sh /root/setup.sh
            sudo chmod +x /root/setup.sh

            if ! command -v dos2unix &> /dev/null; then
              sudo yum install -y dos2unix || sudo dnf install -y dos2unix
            fi

            sudo dos2unix /root/.env /root/setup.sh
            sudo bash /root/setup.sh
          '
