name: 🚀 Auto Deploy to EC2 on Main Push

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Setup SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: 🚀 SSH into EC2 and Deploy (with env)
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          DB_NAME: ${{ secrets.DB_NAME }}
          CHAT_DB_NAME: ${{ secrets.CHAT_DB_NAME }}
          PORT: ${{ secrets.PORT }}
          BASE_EMAIL: ${{ secrets.BASE_EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          TARGET_EMAIL: ${{ secrets.TARGET_EMAIL }}
          ICELL_TARGET_EMAIL: ${{ secrets.ICELL_TARGET_EMAIL }}
          GROQ_API_KEY_1: ${{ secrets.GROQ_API_KEY_1 }}
          GROQ_API_KEY_2: ${{ secrets.GROQ_API_KEY_2 }}
          GROQ_API_KEY_3: ${{ secrets.GROQ_API_KEY_3 }}
          GROQ_API_KEY_4: ${{ secrets.GROQ_API_KEY_4 }}
          GROQ_API_KEY_5: ${{ secrets.GROQ_API_KEY_5 }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_NAME: ${{ secrets.AWS_S3_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}
        run: |
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=100 -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_HOST }} <<EOF
            set -e
            set -x

            # Export environment variables
            export MONGO_URI="${MONGO_URI}"
            export DB_NAME="${DB_NAME}"
            export CHAT_DB_NAME="${CHAT_DB_NAME}"
            export PORT="${PORT}"
            export BASE_EMAIL="${BASE_EMAIL}"
            export PASSWORD="${PASSWORD}"
            export TARGET_EMAIL="${TARGET_EMAIL}"
            export ICELL_TARGET_EMAIL="${ICELL_TARGET_EMAIL}"
            export GROQ_API_KEY_1="${GROQ_API_KEY_1}"
            export GROQ_API_KEY_2="${GROQ_API_KEY_2}"
            export GROQ_API_KEY_3="${GROQ_API_KEY_3}"
            export GROQ_API_KEY_4="${GROQ_API_KEY_4}"
            export GROQ_API_KEY_5="${GROQ_API_KEY_5}"
            export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
            export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
            export AWS_S3_NAME="${AWS_S3_NAME}"
            export AWS_REGION="${AWS_REGION}"
            export REACT_APP_BASE_URL="${REACT_APP_BASE_URL}"

            echo -e "\n\033[1;34m🚀 Starting Deployment...\033[0m"

            REPO_URL="https://github.com/SAMSDP/VEC_Landing.git"
            CLONE_DIR="$HOME/VEC_Landing"
            FRONTEND_DIR="$CLONE_DIR/Frontend"
            BACKEND_DIR="$CLONE_DIR/Backend"
            FRONTEND_TARGET="/var/www/html/Frontend"
            BACKEND_TARGET="/var/www/Backend"

            echo -e "\n\033[1;32m🧹 Cleaning previous build...\033[0m"
            rm -rf "$CLONE_DIR"
            git clone "$REPO_URL" "$CLONE_DIR"

            echo -e "\n\033[1;32m💡 Setting up Frontend...\033[0m"
            cd "$FRONTEND_DIR"
            npm install --legacy-peer-deps
            echo "REACT_APP_BASE_URL=$REACT_APP_BASE_URL" > .env
            npm run build

            echo -e "\n\033[1;32m💡 Setting up Backend...\033[0m"
            cd "$BACKEND_DIR"
            pm2 stop server.js || true
            npm install --legacy-peer-deps

            echo -e "\n\033[1;32m📝 Writing backend .env...\033[0m"
            {
              echo "MONGO_URI=$MONGO_URI"
              echo "DB_NAME=$DB_NAME"
              echo "CHAT_DB_NAME=$CHAT_DB_NAME"
              echo "PORT=$PORT"
              echo "BASE_EMAIL=$BASE_EMAIL"
              echo "PASSWORD=$PASSWORD"
              echo "TARGET_EMAIL=$TARGET_EMAIL"
              echo "ICELL_TARGET_EMAIL=$ICELL_TARGET_EMAIL"
              echo "GROQ_API_KEY_1=$GROQ_API_KEY_1"
              echo "GROQ_API_KEY_2=$GROQ_API_KEY_2"
              echo "GROQ_API_KEY_3=$GROQ_API_KEY_3"
              echo "GROQ_API_KEY_4=$GROQ_API_KEY_4"
              echo "GROQ_API_KEY_5=$GROQ_API_KEY_5"
              echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
              echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
              echo "AWS_S3_NAME=$AWS_S3_NAME"
              echo "AWS_REGION=$AWS_REGION"
            } > .env

            echo -e "\n\033[1;32m🚚 Replacing frontend in /var/www/html...\033[0m"
            sudo rm -rf "$FRONTEND_TARGET"
            sudo mv "$FRONTEND_DIR" "$FRONTEND_TARGET"

            echo -e "\n\033[1;32m🚚 Replacing backend in /var/www...\033[0m"
            sudo rm -rf "$BACKEND_TARGET"
            sudo mv "$BACKEND_DIR" "$BACKEND_TARGET"

            echo -e "\n\033[1;32m🌀 Restarting backend and nginx...\033[0m"
            cd "$BACKEND_TARGET"
            pm2 start server.js || pm2 restart server.js
            pm2 save
            sudo systemctl restart nginx

            echo -e "\n\033[1;32m✅ Deployment Completed!\033[0m"
        EOF
